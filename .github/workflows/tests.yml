name: Tests
on:
  - push
  - pull_request

jobs:
  static-analysis:
    name: Static analysis
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install dependencies
      run: python3 -m pip install tox

    - name: Run static analysis
      run: tox -vve static

    - name: Run linters
      run: tox -vve lint

  integration-tests:
    name: Juju tests
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
          sudo snap refresh lxd --channel=latest
          sudo adduser "$USER" lxd
          sudo lxd init --auto
          sudo snap install charmcraft --classic
          sudo snap install juju --classic
          sudo snap install juju-wait --classic

    - name: Build charms
      run: |
          set -eux
          sudo -g lxd charmcraft pack

          # ancillary charm for testing purposes
          sudo -g lxd charmcraft pack --project-dir examples/https-client

    - name: Bootstrap Juju
      run: |
          set -eux
          sudo -g lxd lxc network set lxdbr0 ipv6.address=none
          sudo -g lxd juju bootstrap lxd local

    - name: Exercice lxd-https relation
      run: |
          set -eux
          STEP_NAME="lxd-https relation"
          echo "# === $STEP_NAME starts === #" >> juju-debug.log

          # capture juju's logs on error
          debug() {
              rc="$?"
              set +e
              juju debug-log --replay --level debug >> juju-debug.log
              echo "# === $STEP_NAME ends === #" >> juju-debug.log
              exit "$rc"
          }
          trap debug err exit

          juju deploy ./lxd_ubuntu-20.04-amd64.charm --num-units 1 --config lxd-listen-https=true
          juju deploy ./https-client_ubuntu-20.04-amd64.charm --config autoremove=false
          juju relate https-client lxd
          juju wait
          juju status --relations

          # confirm lxd now trusts the client cert
          juju run --unit lxd/leader -- lxc config trust list --format csv | grep -E ",juju-relation-https-client/[0-9]+,"

          # toggle the autoremove config and check if lxd's side is updated
          juju config https-client autoremove=true
          juju wait
          juju run --unit lxd/leader -- lxc config trust list --format csv | grep -E ",juju-relation-https-client/[0-9]+:autoremove,"

          # removing the https-client application will break the
          # relation causing the removal of the cert
          juju remove-application https-client
          juju wait
          ! juju run --unit lxd/leader -- lxc config trust list --format csv | grep -E ",juju-relation-https-client/[0-9]+:autoremove,"
          juju status --relations

    - name: Test opening/closing ports
      run: |
          set -eux
          # open the dns, bgp and metrics ports
          juju config lxd lxd-listen-dns=true lxd-listen-bgp=true lxd-listen-metrics=true
          juju wait
          juju status
          # check that the dns, bgp, https and metrics ports are opened
          OPENED_PORTS="$(juju run --unit lxd/leader "opened-ports" | grep -cE '^(53|179|8443|9100)/tcp$')"
          [ "$OPENED_PORTS" -eq 4 ]
          # close the dns, bgp and metrics ports
          juju config lxd lxd-listen-dns=false lxd-listen-bgp=false lxd-listen-metrics=false
          juju wait
          juju status
          # check that only the https port remains opened
          HTTPS_PORT="$(juju run --unit lxd/leader "opened-ports" | grep -E '^[0-9]+/tcp$')"
          [ "$HTTPS_PORT" = "8443/tcp" ]

    - name: Scale the number of lxd units
      run: |
          set -eux
          juju add-unit lxd
          juju wait
          juju status

    - name: Test add-trusted-client action
      run: |
          set -eux
          CERT_NAME="add-trusted-client-$$"

          # Generate local cert/key
          rm -rf ~/snap/lxd/common/config/
          lxc remote add localhost --accept-certificate --password=abc 2>/dev/null || true

          juju run-action --wait lxd/leader add-trusted-client name="$CERT_NAME" cert="$(cat ~/snap/lxd/common/config/client.crt)" | grep -F 'result: The client certificate is now trusted'

          # Confirm the user's cert was added to the trusted list
          juju run --unit lxd/leader -- lxc config trust list -f csv | grep "^client,${CERT_NAME},"


    - name: Cleanup standalone lxd units
      run: |
          set -eux
          juju remove-application --force lxd
          juju wait
          juju status

    - name: Cluster tests
      run: |
          set -eux
          STEP_NAME="cluster tests"
          echo "# === $STEP_NAME starts === #" >> juju-debug.log

          # capture juju's logs on error
          debug() {
              rc="$?"
              set +e
              juju debug-log --replay --level debug >> juju-debug.log
              echo "# === $STEP_NAME ends === #" >> juju-debug.log
              exit "$rc"
          }
          trap debug err exit

          NODE_CREATED="3"
          juju deploy ./lxd_ubuntu-20.04-amd64.charm --num-units "$NODE_CREATED" --config mode=cluster
          juju wait
          juju status --relations

          NODE_JOINED="$(juju run --unit lxd/leader -- lxc cluster list --format csv | grep -cF ',ONLINE,Fully operational')"
          [ "$NODE_JOINED" -eq "$NODE_CREATED" ]

    - name: Check for errors
      run: |
          set -eux
          if juju status --format=oneline | grep -qF workload:error; then
              echo "Juju failed to deploy"
              juju status --format=oneline
              exit 1
          fi

    - name: Juju debug-log
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: juju-debug-logs ${{ github.job }}
        path: juju-debug.log
        retention-days: 5
