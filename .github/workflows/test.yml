name: test

on:
  - push
  - pull_request

jobs:
  test:
    name: Juju tests
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        set -eux
        sudo snap install charmcraft --classic
        sudo snap install juju --classic
        sudo snap install juju-wait --classic

    - name: Init LXD
      run: |
        set -eux
        sudo adduser "$USER" lxd
        sudo -g lxd lxd init --auto

    - name: Build charms
      run: |
        set -eux
        sudo -g lxd charmcraft build

        # ancillary charm for testing purposes
        sudo -g lxd charmcraft build --from examples/https-client

    - name: Bootstrap Juju
      run: |
        set -eux
        sudo -g lxd lxc network set lxdbr0 ipv6.address=none
        sudo -g lxd juju bootstrap lxd local

    - name: Exercice lxd-https relation
      run: |
        set -eux
        STEP_NAME="lxd-https relation"
        echo "# === $STEP_NAME starts === #" >> juju-debug.log

        # capture juju's logs on error
        debug() {
            rc="$?"
            set +e
            juju debug-log --replay --level debug >> juju-debug.log
            echo "# === $STEP_NAME ends === #" >> juju-debug.log
            exit "$rc"
        }
        trap debug err exit

        juju deploy ./lxd_ubuntu-20.04-amd64.charm --num-units 1 --config sysctl-tuning=false --config kernel-hardening=false --config lxd-listen-https=true
        juju deploy ./https-client_ubuntu-20.04-amd64.charm --config autoremove=false
        juju relate https-client lxd
        juju wait
        juju status --relations

        # confirm lxd now trusts the client cert
        juju run --unit lxd/leader -- lxc config trust list --format csv | grep -E ",juju-relation-https-client/[0-9]+,"

        # toggle the autoremove config and check if lxd's side is updated
        juju config https-client autoremove=true
        juju wait
        juju run --unit lxd/leader -- lxc config trust list --format csv | grep -E ",juju-relation-https-client/[0-9]+:autoremove,"

        # removing the https-client application will break the
        # relation causing the removal of the cert
        juju remove-application https-client
        juju wait
        ! juju run --unit lxd/leader -- lxc config trust list --format csv | grep -E ",juju-relation-https-client/[0-9]+:autoremove,"
        juju status --relations

    - name: Scale the number of lxd units
      run: |
        set -eux
        juju add-unit lxd --num-units 3
        juju wait
        juju status

    - name: Cleanup standalong lxd units
      run: |
        set -eux
        juju remove-application --force lxd
        juju wait
        juju status

    - name: Cluster tests
      run: |
        set -eux
        STEP_NAME="cluster tests"
        echo "# === $STEP_NAME starts === #" >> juju-debug.log

        # capture juju's logs on error
        debug() {
            rc="$?"
            set +e
            juju debug-log --replay --level debug >> juju-debug.log
            echo "# === $STEP_NAME ends === #" >> juju-debug.log
            exit "$rc"
        }
        trap debug err exit

        NODE_CREATED="3"
        juju deploy ./lxd_ubuntu-20.04-amd64.charm --num-units "$NODE_CREATED" --config sysctl-tuning=false --config kernel-hardening=false --config mode=cluster
        juju wait
        juju status --relations

        NODE_JOINED="$(juju run --unit lxd/leader -- lxc cluster list --format csv | grep -cF ',ONLINE,Fully operational')"
        [ "$NODE_JOINED" -eq "$NODE_CREATED" ]

    - name: Check for errors
      run: |
        set -eux
        if juju status --format=oneline | grep -qF workload:error; then
            echo "Juju failed to deploy"
            juju status --format=oneline
            exit 1
        fi

    - name: Juju debug-log
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: juju-debug-logs ${{ github.job }}
        path: juju-debug.log
        retention-days: 5
